/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Represents the notification settings in the profile of the specific user.
 */
@Schema(description = "Represents the notification settings in the profile of the specific user.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class NotificationsUserProfile {
  @JsonProperty("notifyOnOwnChanges")
  private Boolean notifyOnOwnChanges = null;

  @JsonProperty("jabberNotificationsEnabled")
  private Boolean jabberNotificationsEnabled = null;

  @JsonProperty("emailNotificationsEnabled")
  private Boolean emailNotificationsEnabled = null;

  @JsonProperty("mentionNotificationsEnabled")
  private Boolean mentionNotificationsEnabled = null;

  @JsonProperty("duplicateClusterNotificationsEnabled")
  private Boolean duplicateClusterNotificationsEnabled = null;

  @JsonProperty("mailboxIntegrationNotificationsEnabled")
  private Boolean mailboxIntegrationNotificationsEnabled = null;

  @JsonProperty("usePlainTextEmails")
  private Boolean usePlainTextEmails = null;

  @JsonProperty("autoWatchOnComment")
  private Boolean autoWatchOnComment = null;

  @JsonProperty("autoWatchOnCreate")
  private Boolean autoWatchOnCreate = null;

  @JsonProperty("autoWatchOnVote")
  private Boolean autoWatchOnVote = null;

  @JsonProperty("autoWatchOnUpdate")
  private Boolean autoWatchOnUpdate = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public NotificationsUserProfile notifyOnOwnChanges(Boolean notifyOnOwnChanges) {
    this.notifyOnOwnChanges = notifyOnOwnChanges;
    return this;
  }

   /**
   * Get notifyOnOwnChanges
   * @return notifyOnOwnChanges
  **/
  @Schema(description = "")
  public Boolean isNotifyOnOwnChanges() {
    return notifyOnOwnChanges;
  }

  public void setNotifyOnOwnChanges(Boolean notifyOnOwnChanges) {
    this.notifyOnOwnChanges = notifyOnOwnChanges;
  }

  public NotificationsUserProfile jabberNotificationsEnabled(Boolean jabberNotificationsEnabled) {
    this.jabberNotificationsEnabled = jabberNotificationsEnabled;
    return this;
  }

   /**
   * Get jabberNotificationsEnabled
   * @return jabberNotificationsEnabled
  **/
  @Schema(description = "")
  public Boolean isJabberNotificationsEnabled() {
    return jabberNotificationsEnabled;
  }

  public void setJabberNotificationsEnabled(Boolean jabberNotificationsEnabled) {
    this.jabberNotificationsEnabled = jabberNotificationsEnabled;
  }

  public NotificationsUserProfile emailNotificationsEnabled(Boolean emailNotificationsEnabled) {
    this.emailNotificationsEnabled = emailNotificationsEnabled;
    return this;
  }

   /**
   * Get emailNotificationsEnabled
   * @return emailNotificationsEnabled
  **/
  @Schema(description = "")
  public Boolean isEmailNotificationsEnabled() {
    return emailNotificationsEnabled;
  }

  public void setEmailNotificationsEnabled(Boolean emailNotificationsEnabled) {
    this.emailNotificationsEnabled = emailNotificationsEnabled;
  }

  public NotificationsUserProfile mentionNotificationsEnabled(Boolean mentionNotificationsEnabled) {
    this.mentionNotificationsEnabled = mentionNotificationsEnabled;
    return this;
  }

   /**
   * Get mentionNotificationsEnabled
   * @return mentionNotificationsEnabled
  **/
  @Schema(description = "")
  public Boolean isMentionNotificationsEnabled() {
    return mentionNotificationsEnabled;
  }

  public void setMentionNotificationsEnabled(Boolean mentionNotificationsEnabled) {
    this.mentionNotificationsEnabled = mentionNotificationsEnabled;
  }

  public NotificationsUserProfile duplicateClusterNotificationsEnabled(Boolean duplicateClusterNotificationsEnabled) {
    this.duplicateClusterNotificationsEnabled = duplicateClusterNotificationsEnabled;
    return this;
  }

   /**
   * Get duplicateClusterNotificationsEnabled
   * @return duplicateClusterNotificationsEnabled
  **/
  @Schema(description = "")
  public Boolean isDuplicateClusterNotificationsEnabled() {
    return duplicateClusterNotificationsEnabled;
  }

  public void setDuplicateClusterNotificationsEnabled(Boolean duplicateClusterNotificationsEnabled) {
    this.duplicateClusterNotificationsEnabled = duplicateClusterNotificationsEnabled;
  }

  public NotificationsUserProfile mailboxIntegrationNotificationsEnabled(Boolean mailboxIntegrationNotificationsEnabled) {
    this.mailboxIntegrationNotificationsEnabled = mailboxIntegrationNotificationsEnabled;
    return this;
  }

   /**
   * Get mailboxIntegrationNotificationsEnabled
   * @return mailboxIntegrationNotificationsEnabled
  **/
  @Schema(description = "")
  public Boolean isMailboxIntegrationNotificationsEnabled() {
    return mailboxIntegrationNotificationsEnabled;
  }

  public void setMailboxIntegrationNotificationsEnabled(Boolean mailboxIntegrationNotificationsEnabled) {
    this.mailboxIntegrationNotificationsEnabled = mailboxIntegrationNotificationsEnabled;
  }

  public NotificationsUserProfile usePlainTextEmails(Boolean usePlainTextEmails) {
    this.usePlainTextEmails = usePlainTextEmails;
    return this;
  }

   /**
   * Get usePlainTextEmails
   * @return usePlainTextEmails
  **/
  @Schema(description = "")
  public Boolean isUsePlainTextEmails() {
    return usePlainTextEmails;
  }

  public void setUsePlainTextEmails(Boolean usePlainTextEmails) {
    this.usePlainTextEmails = usePlainTextEmails;
  }

  public NotificationsUserProfile autoWatchOnComment(Boolean autoWatchOnComment) {
    this.autoWatchOnComment = autoWatchOnComment;
    return this;
  }

   /**
   * Get autoWatchOnComment
   * @return autoWatchOnComment
  **/
  @Schema(description = "")
  public Boolean isAutoWatchOnComment() {
    return autoWatchOnComment;
  }

  public void setAutoWatchOnComment(Boolean autoWatchOnComment) {
    this.autoWatchOnComment = autoWatchOnComment;
  }

  public NotificationsUserProfile autoWatchOnCreate(Boolean autoWatchOnCreate) {
    this.autoWatchOnCreate = autoWatchOnCreate;
    return this;
  }

   /**
   * Get autoWatchOnCreate
   * @return autoWatchOnCreate
  **/
  @Schema(description = "")
  public Boolean isAutoWatchOnCreate() {
    return autoWatchOnCreate;
  }

  public void setAutoWatchOnCreate(Boolean autoWatchOnCreate) {
    this.autoWatchOnCreate = autoWatchOnCreate;
  }

  public NotificationsUserProfile autoWatchOnVote(Boolean autoWatchOnVote) {
    this.autoWatchOnVote = autoWatchOnVote;
    return this;
  }

   /**
   * Get autoWatchOnVote
   * @return autoWatchOnVote
  **/
  @Schema(description = "")
  public Boolean isAutoWatchOnVote() {
    return autoWatchOnVote;
  }

  public void setAutoWatchOnVote(Boolean autoWatchOnVote) {
    this.autoWatchOnVote = autoWatchOnVote;
  }

  public NotificationsUserProfile autoWatchOnUpdate(Boolean autoWatchOnUpdate) {
    this.autoWatchOnUpdate = autoWatchOnUpdate;
    return this;
  }

   /**
   * Get autoWatchOnUpdate
   * @return autoWatchOnUpdate
  **/
  @Schema(description = "")
  public Boolean isAutoWatchOnUpdate() {
    return autoWatchOnUpdate;
  }

  public void setAutoWatchOnUpdate(Boolean autoWatchOnUpdate) {
    this.autoWatchOnUpdate = autoWatchOnUpdate;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationsUserProfile notificationsUserProfile = (NotificationsUserProfile) o;
    return Objects.equals(this.notifyOnOwnChanges, notificationsUserProfile.notifyOnOwnChanges) &&
        Objects.equals(this.jabberNotificationsEnabled, notificationsUserProfile.jabberNotificationsEnabled) &&
        Objects.equals(this.emailNotificationsEnabled, notificationsUserProfile.emailNotificationsEnabled) &&
        Objects.equals(this.mentionNotificationsEnabled, notificationsUserProfile.mentionNotificationsEnabled) &&
        Objects.equals(this.duplicateClusterNotificationsEnabled, notificationsUserProfile.duplicateClusterNotificationsEnabled) &&
        Objects.equals(this.mailboxIntegrationNotificationsEnabled, notificationsUserProfile.mailboxIntegrationNotificationsEnabled) &&
        Objects.equals(this.usePlainTextEmails, notificationsUserProfile.usePlainTextEmails) &&
        Objects.equals(this.autoWatchOnComment, notificationsUserProfile.autoWatchOnComment) &&
        Objects.equals(this.autoWatchOnCreate, notificationsUserProfile.autoWatchOnCreate) &&
        Objects.equals(this.autoWatchOnVote, notificationsUserProfile.autoWatchOnVote) &&
        Objects.equals(this.autoWatchOnUpdate, notificationsUserProfile.autoWatchOnUpdate) &&
        Objects.equals(this.id, notificationsUserProfile.id) &&
        Objects.equals(this.$type, notificationsUserProfile.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notifyOnOwnChanges, jabberNotificationsEnabled, emailNotificationsEnabled, mentionNotificationsEnabled, duplicateClusterNotificationsEnabled, mailboxIntegrationNotificationsEnabled, usePlainTextEmails, autoWatchOnComment, autoWatchOnCreate, autoWatchOnVote, autoWatchOnUpdate, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationsUserProfile {\n");
    
    sb.append("    notifyOnOwnChanges: ").append(toIndentedString(notifyOnOwnChanges)).append("\n");
    sb.append("    jabberNotificationsEnabled: ").append(toIndentedString(jabberNotificationsEnabled)).append("\n");
    sb.append("    emailNotificationsEnabled: ").append(toIndentedString(emailNotificationsEnabled)).append("\n");
    sb.append("    mentionNotificationsEnabled: ").append(toIndentedString(mentionNotificationsEnabled)).append("\n");
    sb.append("    duplicateClusterNotificationsEnabled: ").append(toIndentedString(duplicateClusterNotificationsEnabled)).append("\n");
    sb.append("    mailboxIntegrationNotificationsEnabled: ").append(toIndentedString(mailboxIntegrationNotificationsEnabled)).append("\n");
    sb.append("    usePlainTextEmails: ").append(toIndentedString(usePlainTextEmails)).append("\n");
    sb.append("    autoWatchOnComment: ").append(toIndentedString(autoWatchOnComment)).append("\n");
    sb.append("    autoWatchOnCreate: ").append(toIndentedString(autoWatchOnCreate)).append("\n");
    sb.append("    autoWatchOnVote: ").append(toIndentedString(autoWatchOnVote)).append("\n");
    sb.append("    autoWatchOnUpdate: ").append(toIndentedString(autoWatchOnUpdate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
