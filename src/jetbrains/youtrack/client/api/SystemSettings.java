/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Represents the System settings that affect core functionality of YouTrack.
 */
@Schema(description = "Represents the System settings that affect core functionality of YouTrack.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class SystemSettings {
  @JsonProperty("baseUrl")
  private String baseUrl = null;

  @JsonProperty("maxUploadFileSize")
  private Long maxUploadFileSize = null;

  @JsonProperty("maxExportItems")
  private Integer maxExportItems = null;

  @JsonProperty("administratorEmail")
  private String administratorEmail = null;

  @JsonProperty("allowStatisticsCollection")
  private Boolean allowStatisticsCollection = null;

  @JsonProperty("isApplicationReadOnly")
  private Boolean isApplicationReadOnly = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public SystemSettings baseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
    return this;
  }

   /**
   * Get baseUrl
   * @return baseUrl
  **/
  @Schema(description = "")
  public String getBaseUrl() {
    return baseUrl;
  }

  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }

  public SystemSettings maxUploadFileSize(Long maxUploadFileSize) {
    this.maxUploadFileSize = maxUploadFileSize;
    return this;
  }

   /**
   * Get maxUploadFileSize
   * @return maxUploadFileSize
  **/
  @Schema(description = "")
  public Long getMaxUploadFileSize() {
    return maxUploadFileSize;
  }

  public void setMaxUploadFileSize(Long maxUploadFileSize) {
    this.maxUploadFileSize = maxUploadFileSize;
  }

  public SystemSettings maxExportItems(Integer maxExportItems) {
    this.maxExportItems = maxExportItems;
    return this;
  }

   /**
   * Get maxExportItems
   * @return maxExportItems
  **/
  @Schema(description = "")
  public Integer getMaxExportItems() {
    return maxExportItems;
  }

  public void setMaxExportItems(Integer maxExportItems) {
    this.maxExportItems = maxExportItems;
  }

  public SystemSettings administratorEmail(String administratorEmail) {
    this.administratorEmail = administratorEmail;
    return this;
  }

   /**
   * Get administratorEmail
   * @return administratorEmail
  **/
  @Schema(description = "")
  public String getAdministratorEmail() {
    return administratorEmail;
  }

  public void setAdministratorEmail(String administratorEmail) {
    this.administratorEmail = administratorEmail;
  }

  public SystemSettings allowStatisticsCollection(Boolean allowStatisticsCollection) {
    this.allowStatisticsCollection = allowStatisticsCollection;
    return this;
  }

   /**
   * Get allowStatisticsCollection
   * @return allowStatisticsCollection
  **/
  @Schema(description = "")
  public Boolean isAllowStatisticsCollection() {
    return allowStatisticsCollection;
  }

  public void setAllowStatisticsCollection(Boolean allowStatisticsCollection) {
    this.allowStatisticsCollection = allowStatisticsCollection;
  }

  public SystemSettings isApplicationReadOnly(Boolean isApplicationReadOnly) {
    this.isApplicationReadOnly = isApplicationReadOnly;
    return this;
  }

   /**
   * Get isApplicationReadOnly
   * @return isApplicationReadOnly
  **/
  @Schema(description = "")
  public Boolean isIsApplicationReadOnly() {
    return isApplicationReadOnly;
  }

  public void setIsApplicationReadOnly(Boolean isApplicationReadOnly) {
    this.isApplicationReadOnly = isApplicationReadOnly;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemSettings systemSettings = (SystemSettings) o;
    return Objects.equals(this.baseUrl, systemSettings.baseUrl) &&
        Objects.equals(this.maxUploadFileSize, systemSettings.maxUploadFileSize) &&
        Objects.equals(this.maxExportItems, systemSettings.maxExportItems) &&
        Objects.equals(this.administratorEmail, systemSettings.administratorEmail) &&
        Objects.equals(this.allowStatisticsCollection, systemSettings.allowStatisticsCollection) &&
        Objects.equals(this.isApplicationReadOnly, systemSettings.isApplicationReadOnly) &&
        Objects.equals(this.id, systemSettings.id) &&
        Objects.equals(this.$type, systemSettings.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseUrl, maxUploadFileSize, maxExportItems, administratorEmail, allowStatisticsCollection, isApplicationReadOnly, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemSettings {\n");
    
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    maxUploadFileSize: ").append(toIndentedString(maxUploadFileSize)).append("\n");
    sb.append("    maxExportItems: ").append(toIndentedString(maxExportItems)).append("\n");
    sb.append("    administratorEmail: ").append(toIndentedString(administratorEmail)).append("\n");
    sb.append("    allowStatisticsCollection: ").append(toIndentedString(allowStatisticsCollection)).append("\n");
    sb.append("    isApplicationReadOnly: ").append(toIndentedString(isApplicationReadOnly)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
