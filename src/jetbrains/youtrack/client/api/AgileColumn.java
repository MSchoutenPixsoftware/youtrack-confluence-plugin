/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents settings for a single board column
 */
@Schema(description = "Represents settings for a single board column")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class AgileColumn {
  @JsonProperty("presentation")
  private String presentation = null;

  @JsonProperty("isResolved")
  private Boolean isResolved = null;

  @JsonProperty("ordinal")
  private Integer ordinal = null;

  @JsonProperty("parent")
  private ColumnSettings parent = null;

  @JsonProperty("wipLimit")
  private WIPLimit wipLimit = null;

  @JsonProperty("fieldValues")
  private List<AgileColumnFieldValue> fieldValues = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

   /**
   * Get presentation
   * @return presentation
  **/
  @Schema(description = "")
  public String getPresentation() {
    return presentation;
  }

   /**
   * Get isResolved
   * @return isResolved
  **/
  @Schema(description = "")
  public Boolean isIsResolved() {
    return isResolved;
  }

  public AgileColumn ordinal(Integer ordinal) {
    this.ordinal = ordinal;
    return this;
  }

   /**
   * Get ordinal
   * @return ordinal
  **/
  @Schema(description = "")
  public Integer getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }

  public AgileColumn parent(ColumnSettings parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @Schema(description = "")
  public ColumnSettings getParent() {
    return parent;
  }

  public void setParent(ColumnSettings parent) {
    this.parent = parent;
  }

  public AgileColumn wipLimit(WIPLimit wipLimit) {
    this.wipLimit = wipLimit;
    return this;
  }

   /**
   * Get wipLimit
   * @return wipLimit
  **/
  @Schema(description = "")
  public WIPLimit getWipLimit() {
    return wipLimit;
  }

  public void setWipLimit(WIPLimit wipLimit) {
    this.wipLimit = wipLimit;
  }

  public AgileColumn fieldValues(List<AgileColumnFieldValue> fieldValues) {
    this.fieldValues = fieldValues;
    return this;
  }

  public AgileColumn addFieldValuesItem(AgileColumnFieldValue fieldValuesItem) {
    if (this.fieldValues == null) {
      this.fieldValues = new ArrayList<AgileColumnFieldValue>();
    }
    this.fieldValues.add(fieldValuesItem);
    return this;
  }

   /**
   * Get fieldValues
   * @return fieldValues
  **/
  @Schema(description = "")
  public List<AgileColumnFieldValue> getFieldValues() {
    return fieldValues;
  }

  public void setFieldValues(List<AgileColumnFieldValue> fieldValues) {
    this.fieldValues = fieldValues;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgileColumn agileColumn = (AgileColumn) o;
    return Objects.equals(this.presentation, agileColumn.presentation) &&
        Objects.equals(this.isResolved, agileColumn.isResolved) &&
        Objects.equals(this.ordinal, agileColumn.ordinal) &&
        Objects.equals(this.parent, agileColumn.parent) &&
        Objects.equals(this.wipLimit, agileColumn.wipLimit) &&
        Objects.equals(this.fieldValues, agileColumn.fieldValues) &&
        Objects.equals(this.id, agileColumn.id) &&
        Objects.equals(this.$type, agileColumn.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(presentation, isResolved, ordinal, parent, wipLimit, fieldValues, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgileColumn {\n");
    
    sb.append("    presentation: ").append(toIndentedString(presentation)).append("\n");
    sb.append("    isResolved: ").append(toIndentedString(isResolved)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    wipLimit: ").append(toIndentedString(wipLimit)).append("\n");
    sb.append("    fieldValues: ").append(toIndentedString(fieldValues)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
