/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a set of values that contains users. You can add to the set both individual user accounts and groups of users.
 */
@Schema(description = "Represents a set of values that contains users. You can add to the set both individual user accounts and groups of users.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")
public class UserBundle extends Bundle {
  @JsonProperty("groups")
  private List<UserGroup> groups = null;

  @JsonProperty("individuals")
  private List<User> individuals = null;

  @JsonProperty("aggregatedUsers")
  private List<User> aggregatedUsers = null;

  public UserBundle groups(List<UserGroup> groups) {
    this.groups = groups;
    return this;
  }

  public UserBundle addGroupsItem(UserGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<UserGroup>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @Schema(description = "")
  public List<UserGroup> getGroups() {
    return groups;
  }

  public void setGroups(List<UserGroup> groups) {
    this.groups = groups;
  }

  public UserBundle individuals(List<User> individuals) {
    this.individuals = individuals;
    return this;
  }

  public UserBundle addIndividualsItem(User individualsItem) {
    if (this.individuals == null) {
      this.individuals = new ArrayList<User>();
    }
    this.individuals.add(individualsItem);
    return this;
  }

   /**
   * Get individuals
   * @return individuals
  **/
  @Schema(description = "")
  public List<User> getIndividuals() {
    return individuals;
  }

  public void setIndividuals(List<User> individuals) {
    this.individuals = individuals;
  }

   /**
   * Get aggregatedUsers
   * @return aggregatedUsers
  **/
  @Schema(description = "")
  public List<User> getAggregatedUsers() {
    return aggregatedUsers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserBundle userBundle = (UserBundle) o;
    return Objects.equals(this.groups, userBundle.groups) &&
        Objects.equals(this.individuals, userBundle.individuals) &&
        Objects.equals(this.aggregatedUsers, userBundle.aggregatedUsers) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groups, individuals, aggregatedUsers, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserBundle {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    individuals: ").append(toIndentedString(individuals)).append("\n");
    sb.append("    aggregatedUsers: ").append(toIndentedString(aggregatedUsers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
