/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents time tracking settings of the project.
 */
@Schema(description = "Represents time tracking settings of the project.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class ProjectTimeTrackingSettings {
  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("estimate")
  private ProjectCustomField estimate = null;

  @JsonProperty("timeSpent")
  private ProjectCustomField timeSpent = null;

  @JsonProperty("workItemTypes")
  private List<WorkItemType> workItemTypes = null;

  @JsonProperty("project")
  private Project project = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public ProjectTimeTrackingSettings enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public ProjectTimeTrackingSettings estimate(ProjectCustomField estimate) {
    this.estimate = estimate;
    return this;
  }

   /**
   * Get estimate
   * @return estimate
  **/
  @Schema(description = "")
  public ProjectCustomField getEstimate() {
    return estimate;
  }

  public void setEstimate(ProjectCustomField estimate) {
    this.estimate = estimate;
  }

  public ProjectTimeTrackingSettings timeSpent(ProjectCustomField timeSpent) {
    this.timeSpent = timeSpent;
    return this;
  }

   /**
   * Get timeSpent
   * @return timeSpent
  **/
  @Schema(description = "")
  public ProjectCustomField getTimeSpent() {
    return timeSpent;
  }

  public void setTimeSpent(ProjectCustomField timeSpent) {
    this.timeSpent = timeSpent;
  }

  public ProjectTimeTrackingSettings workItemTypes(List<WorkItemType> workItemTypes) {
    this.workItemTypes = workItemTypes;
    return this;
  }

  public ProjectTimeTrackingSettings addWorkItemTypesItem(WorkItemType workItemTypesItem) {
    if (this.workItemTypes == null) {
      this.workItemTypes = new ArrayList<WorkItemType>();
    }
    this.workItemTypes.add(workItemTypesItem);
    return this;
  }

   /**
   * Get workItemTypes
   * @return workItemTypes
  **/
  @Schema(description = "")
  public List<WorkItemType> getWorkItemTypes() {
    return workItemTypes;
  }

  public void setWorkItemTypes(List<WorkItemType> workItemTypes) {
    this.workItemTypes = workItemTypes;
  }

  public ProjectTimeTrackingSettings project(Project project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public Project getProject() {
    return project;
  }

  public void setProject(Project project) {
    this.project = project;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectTimeTrackingSettings projectTimeTrackingSettings = (ProjectTimeTrackingSettings) o;
    return Objects.equals(this.enabled, projectTimeTrackingSettings.enabled) &&
        Objects.equals(this.estimate, projectTimeTrackingSettings.estimate) &&
        Objects.equals(this.timeSpent, projectTimeTrackingSettings.timeSpent) &&
        Objects.equals(this.workItemTypes, projectTimeTrackingSettings.workItemTypes) &&
        Objects.equals(this.project, projectTimeTrackingSettings.project) &&
        Objects.equals(this.id, projectTimeTrackingSettings.id) &&
        Objects.equals(this.$type, projectTimeTrackingSettings.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, estimate, timeSpent, workItemTypes, project, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectTimeTrackingSettings {\n");
    
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    estimate: ").append(toIndentedString(estimate)).append("\n");
    sb.append("    timeSpent: ").append(toIndentedString(timeSpent)).append("\n");
    sb.append("    workItemTypes: ").append(toIndentedString(workItemTypes)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
