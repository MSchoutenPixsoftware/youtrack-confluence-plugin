/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents application-wide settings.
 */
@Schema(description = "Represents application-wide settings.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class GlobalSettings {
  @JsonProperty("systemSettings")
  private SystemSettings systemSettings = null;

  @JsonProperty("notificationSettings")
  private NotificationSettings notificationSettings = null;

  @JsonProperty("restSettings")
  private RestCorsSettings restSettings = null;

  @JsonProperty("appearanceSettings")
  private AppearanceSettings appearanceSettings = null;

  @JsonProperty("localeSettings")
  private LocaleSettings localeSettings = null;

  @JsonProperty("license")
  private License license = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public GlobalSettings systemSettings(SystemSettings systemSettings) {
    this.systemSettings = systemSettings;
    return this;
  }

   /**
   * Get systemSettings
   * @return systemSettings
  **/
  @Schema(description = "")
  public SystemSettings getSystemSettings() {
    return systemSettings;
  }

  public void setSystemSettings(SystemSettings systemSettings) {
    this.systemSettings = systemSettings;
  }

  public GlobalSettings notificationSettings(NotificationSettings notificationSettings) {
    this.notificationSettings = notificationSettings;
    return this;
  }

   /**
   * Get notificationSettings
   * @return notificationSettings
  **/
  @Schema(description = "")
  public NotificationSettings getNotificationSettings() {
    return notificationSettings;
  }

  public void setNotificationSettings(NotificationSettings notificationSettings) {
    this.notificationSettings = notificationSettings;
  }

  public GlobalSettings restSettings(RestCorsSettings restSettings) {
    this.restSettings = restSettings;
    return this;
  }

   /**
   * Get restSettings
   * @return restSettings
  **/
  @Schema(description = "")
  public RestCorsSettings getRestSettings() {
    return restSettings;
  }

  public void setRestSettings(RestCorsSettings restSettings) {
    this.restSettings = restSettings;
  }

  public GlobalSettings appearanceSettings(AppearanceSettings appearanceSettings) {
    this.appearanceSettings = appearanceSettings;
    return this;
  }

   /**
   * Get appearanceSettings
   * @return appearanceSettings
  **/
  @Schema(description = "")
  public AppearanceSettings getAppearanceSettings() {
    return appearanceSettings;
  }

  public void setAppearanceSettings(AppearanceSettings appearanceSettings) {
    this.appearanceSettings = appearanceSettings;
  }

  public GlobalSettings localeSettings(LocaleSettings localeSettings) {
    this.localeSettings = localeSettings;
    return this;
  }

   /**
   * Get localeSettings
   * @return localeSettings
  **/
  @Schema(description = "")
  public LocaleSettings getLocaleSettings() {
    return localeSettings;
  }

  public void setLocaleSettings(LocaleSettings localeSettings) {
    this.localeSettings = localeSettings;
  }

  public GlobalSettings license(License license) {
    this.license = license;
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @Schema(description = "")
  public License getLicense() {
    return license;
  }

  public void setLicense(License license) {
    this.license = license;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalSettings globalSettings = (GlobalSettings) o;
    return Objects.equals(this.systemSettings, globalSettings.systemSettings) &&
        Objects.equals(this.notificationSettings, globalSettings.notificationSettings) &&
        Objects.equals(this.restSettings, globalSettings.restSettings) &&
        Objects.equals(this.appearanceSettings, globalSettings.appearanceSettings) &&
        Objects.equals(this.localeSettings, globalSettings.localeSettings) &&
        Objects.equals(this.license, globalSettings.license) &&
        Objects.equals(this.id, globalSettings.id) &&
        Objects.equals(this.$type, globalSettings.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(systemSettings, notificationSettings, restSettings, appearanceSettings, localeSettings, license, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalSettings {\n");
    
    sb.append("    systemSettings: ").append(toIndentedString(systemSettings)).append("\n");
    sb.append("    notificationSettings: ").append(toIndentedString(notificationSettings)).append("\n");
    sb.append("    restSettings: ").append(toIndentedString(restSettings)).append("\n");
    sb.append("    appearanceSettings: ").append(toIndentedString(appearanceSettings)).append("\n");
    sb.append("    localeSettings: ").append(toIndentedString(localeSettings)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
