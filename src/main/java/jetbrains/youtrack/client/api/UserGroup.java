/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents a group of users.
 */
@Schema(description = "Represents a group of users.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class UserGroup {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("ringId")
  private String ringId = null;

  @JsonProperty("usersCount")
  private Long usersCount = null;

  @JsonProperty("icon")
  private String icon = null;

  @JsonProperty("allUsersGroup")
  private Boolean allUsersGroup = null;

  @JsonProperty("teamForProject")
  private Project teamForProject = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

   /**
   * Get ringId
   * @return ringId
  **/
  @Schema(description = "")
  public String getRingId() {
    return ringId;
  }

   /**
   * Get usersCount
   * @return usersCount
  **/
  @Schema(description = "")
  public Long getUsersCount() {
    return usersCount;
  }

   /**
   * Get icon
   * @return icon
  **/
  @Schema(description = "")
  public String getIcon() {
    return icon;
  }

   /**
   * Get allUsersGroup
   * @return allUsersGroup
  **/
  @Schema(description = "")
  public Boolean isAllUsersGroup() {
    return allUsersGroup;
  }

  public UserGroup teamForProject(Project teamForProject) {
    this.teamForProject = teamForProject;
    return this;
  }

   /**
   * Get teamForProject
   * @return teamForProject
  **/
  @Schema(description = "")
  public Project getTeamForProject() {
    return teamForProject;
  }

  public void setTeamForProject(Project teamForProject) {
    this.teamForProject = teamForProject;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroup userGroup = (UserGroup) o;
    return Objects.equals(this.name, userGroup.name) &&
        Objects.equals(this.ringId, userGroup.ringId) &&
        Objects.equals(this.usersCount, userGroup.usersCount) &&
        Objects.equals(this.icon, userGroup.icon) &&
        Objects.equals(this.allUsersGroup, userGroup.allUsersGroup) &&
        Objects.equals(this.teamForProject, userGroup.teamForProject) &&
        Objects.equals(this.id, userGroup.id) &&
        Objects.equals(this.$type, userGroup.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ringId, usersCount, icon, allUsersGroup, teamForProject, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroup {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ringId: ").append(toIndentedString(ringId)).append("\n");
    sb.append("    usersCount: ").append(toIndentedString(usersCount)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    allUsersGroup: ").append(toIndentedString(allUsersGroup)).append("\n");
    sb.append("    teamForProject: ").append(toIndentedString(teamForProject)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
