/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents the current status of the backup process.
 */
@Schema(description = "Represents the current status of the backup process.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class BackupStatus {
  @JsonProperty("backupInProgress")
  private Boolean backupInProgress = null;

  @JsonProperty("backupCancelled")
  private Boolean backupCancelled = null;

  @JsonProperty("backupError")
  private BackupError backupError = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

   /**
   * Get backupInProgress
   * @return backupInProgress
  **/
  @Schema(description = "")
  public Boolean isBackupInProgress() {
    return backupInProgress;
  }

   /**
   * Get backupCancelled
   * @return backupCancelled
  **/
  @Schema(description = "")
  public Boolean isBackupCancelled() {
    return backupCancelled;
  }

  public BackupStatus backupError(BackupError backupError) {
    this.backupError = backupError;
    return this;
  }

   /**
   * Get backupError
   * @return backupError
  **/
  @Schema(description = "")
  public BackupError getBackupError() {
    return backupError;
  }

  public void setBackupError(BackupError backupError) {
    this.backupError = backupError;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupStatus backupStatus = (BackupStatus) o;
    return Objects.equals(this.backupInProgress, backupStatus.backupInProgress) &&
        Objects.equals(this.backupCancelled, backupStatus.backupCancelled) &&
        Objects.equals(this.backupError, backupStatus.backupError) &&
        Objects.equals(this.id, backupStatus.id) &&
        Objects.equals(this.$type, backupStatus.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupInProgress, backupCancelled, backupError, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupStatus {\n");
    
    sb.append("    backupInProgress: ").append(toIndentedString(backupInProgress)).append("\n");
    sb.append("    backupCancelled: ").append(toIndentedString(backupCancelled)).append("\n");
    sb.append("    backupError: ").append(toIndentedString(backupError)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
