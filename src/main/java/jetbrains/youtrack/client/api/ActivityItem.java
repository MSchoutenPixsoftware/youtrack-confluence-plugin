/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Represents a change in an issue or in its related entities. In the UI, you see these changes as the Activity stream. It shows a feed of all updates of the issue: issue history, comments, attachments, VCS changes, work items, and so on.
 */
@Schema(description = "Represents a change in an issue or in its related entities. In the UI, you see these changes as the Activity stream. It shows a feed of all updates of the issue: issue history, comments, attachments, VCS changes, work items, and so on.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = SprintActivityItem.class, name = "SprintActivityItem"),
  @JsonSubTypes.Type(value = IssueCreatedActivityItem.class, name = "IssueCreatedActivityItem"),
  @JsonSubTypes.Type(value = LinksActivityItem.class, name = "LinksActivityItem"),
  @JsonSubTypes.Type(value = TextCustomFieldActivityItem.class, name = "TextCustomFieldActivityItem"),
  @JsonSubTypes.Type(value = SimpleValueActivityItem.class, name = "SimpleValueActivityItem"),
  @JsonSubTypes.Type(value = SingleValueActivityItem.class, name = "SingleValueActivityItem"),
  @JsonSubTypes.Type(value = CreatedDeletedActivityItem.class, name = "CreatedDeletedActivityItem"),
  @JsonSubTypes.Type(value = AttachmentActivityItem.class, name = "AttachmentActivityItem"),
  @JsonSubTypes.Type(value = TagsActivityItem.class, name = "TagsActivityItem"),
  @JsonSubTypes.Type(value = VcsChangeActivityItem.class, name = "VcsChangeActivityItem"),
  @JsonSubTypes.Type(value = VisibilityUserActivityItem.class, name = "VisibilityUserActivityItem"),
  @JsonSubTypes.Type(value = VisibilityActivityItem.class, name = "VisibilityActivityItem"),
  @JsonSubTypes.Type(value = ProjectActivityItem.class, name = "ProjectActivityItem"),
  @JsonSubTypes.Type(value = TextMarkupActivityItem.class, name = "TextMarkupActivityItem"),
  @JsonSubTypes.Type(value = VisibilityGroupActivityItem.class, name = "VisibilityGroupActivityItem"),
  @JsonSubTypes.Type(value = IssueResolvedActivityItem.class, name = "IssueResolvedActivityItem"),
  @JsonSubTypes.Type(value = WorkItemAuthorActivityItem.class, name = "WorkItemAuthorActivityItem"),
  @JsonSubTypes.Type(value = CommentAttachmentsActivityItem.class, name = "CommentAttachmentsActivityItem"),
  @JsonSubTypes.Type(value = CommentActivityItem.class, name = "CommentActivityItem"),
  @JsonSubTypes.Type(value = WorkItemActivityItem.class, name = "WorkItemActivityItem"),
  @JsonSubTypes.Type(value = WorkItemTypeActivityItem.class, name = "WorkItemTypeActivityItem"),
  @JsonSubTypes.Type(value = CustomFieldActivityItem.class, name = "CustomFieldActivityItem"),
  @JsonSubTypes.Type(value = UsesMarkupActivityItem.class, name = "UsesMarkupActivityItem"),
  @JsonSubTypes.Type(value = VotersActivityItem.class, name = "VotersActivityItem"),
  @JsonSubTypes.Type(value = WorkItemDurationActivityItem.class, name = "WorkItemDurationActivityItem"),
  @JsonSubTypes.Type(value = MultiValueActivityItem.class, name = "MultiValueActivityItem"),
})

public class ActivityItem {
  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityItem activityItem = (ActivityItem) o;
    return Objects.equals(this.id, activityItem.id) &&
        Objects.equals(this.$type, activityItem.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
