/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2099.99
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jetbrains.youtrack.client.api;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents an agile board configuration.
 */
@Schema(description = "Represents an agile board configuration.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-04T14:25:38.465627+03:00[Europe/Moscow]")@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "$type", visible = true )
@JsonSubTypes({
})

public class Agile {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("owner")
  private User owner = null;

  @JsonProperty("visibleFor")
  private UserGroup visibleFor = null;

  @JsonProperty("visibleForProjectBased")
  private Boolean visibleForProjectBased = null;

  @JsonProperty("updateableBy")
  private UserGroup updateableBy = null;

  @JsonProperty("updateableByProjectBased")
  private Boolean updateableByProjectBased = null;

  @JsonProperty("orphansAtTheTop")
  private Boolean orphansAtTheTop = null;

  @JsonProperty("hideOrphansSwimlane")
  private Boolean hideOrphansSwimlane = null;

  @JsonProperty("estimationField")
  private CustomField estimationField = null;

  @JsonProperty("originalEstimationField")
  private CustomField originalEstimationField = null;

  @JsonProperty("projects")
  private List<Project> projects = null;

  @JsonProperty("sprints")
  private List<Sprint> sprints = null;

  @JsonProperty("currentSprint")
  private Sprint currentSprint = null;

  @JsonProperty("columnSettings")
  private ColumnSettings columnSettings = null;

  @JsonProperty("swimlaneSettings")
  private SwimlaneSettings swimlaneSettings = null;

  @JsonProperty("sprintsSettings")
  private SprintsSettings sprintsSettings = null;

  @JsonProperty("colorCoding")
  private ColorCoding colorCoding = null;

  @JsonProperty("status")
  private AgileStatus status = null;

  @JsonProperty("id")
  private String id = null;

  @JsonTypeId
  private String $type = null;

  public Agile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Agile owner(User owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @Schema(description = "")
  public User getOwner() {
    return owner;
  }

  public void setOwner(User owner) {
    this.owner = owner;
  }

  public Agile visibleFor(UserGroup visibleFor) {
    this.visibleFor = visibleFor;
    return this;
  }

   /**
   * Get visibleFor
   * @return visibleFor
  **/
  @Schema(description = "")
  public UserGroup getVisibleFor() {
    return visibleFor;
  }

  public void setVisibleFor(UserGroup visibleFor) {
    this.visibleFor = visibleFor;
  }

  public Agile visibleForProjectBased(Boolean visibleForProjectBased) {
    this.visibleForProjectBased = visibleForProjectBased;
    return this;
  }

   /**
   * Get visibleForProjectBased
   * @return visibleForProjectBased
  **/
  @Schema(description = "")
  public Boolean isVisibleForProjectBased() {
    return visibleForProjectBased;
  }

  public void setVisibleForProjectBased(Boolean visibleForProjectBased) {
    this.visibleForProjectBased = visibleForProjectBased;
  }

  public Agile updateableBy(UserGroup updateableBy) {
    this.updateableBy = updateableBy;
    return this;
  }

   /**
   * Get updateableBy
   * @return updateableBy
  **/
  @Schema(description = "")
  public UserGroup getUpdateableBy() {
    return updateableBy;
  }

  public void setUpdateableBy(UserGroup updateableBy) {
    this.updateableBy = updateableBy;
  }

  public Agile updateableByProjectBased(Boolean updateableByProjectBased) {
    this.updateableByProjectBased = updateableByProjectBased;
    return this;
  }

   /**
   * Get updateableByProjectBased
   * @return updateableByProjectBased
  **/
  @Schema(description = "")
  public Boolean isUpdateableByProjectBased() {
    return updateableByProjectBased;
  }

  public void setUpdateableByProjectBased(Boolean updateableByProjectBased) {
    this.updateableByProjectBased = updateableByProjectBased;
  }

  public Agile orphansAtTheTop(Boolean orphansAtTheTop) {
    this.orphansAtTheTop = orphansAtTheTop;
    return this;
  }

   /**
   * Get orphansAtTheTop
   * @return orphansAtTheTop
  **/
  @Schema(description = "")
  public Boolean isOrphansAtTheTop() {
    return orphansAtTheTop;
  }

  public void setOrphansAtTheTop(Boolean orphansAtTheTop) {
    this.orphansAtTheTop = orphansAtTheTop;
  }

  public Agile hideOrphansSwimlane(Boolean hideOrphansSwimlane) {
    this.hideOrphansSwimlane = hideOrphansSwimlane;
    return this;
  }

   /**
   * Get hideOrphansSwimlane
   * @return hideOrphansSwimlane
  **/
  @Schema(description = "")
  public Boolean isHideOrphansSwimlane() {
    return hideOrphansSwimlane;
  }

  public void setHideOrphansSwimlane(Boolean hideOrphansSwimlane) {
    this.hideOrphansSwimlane = hideOrphansSwimlane;
  }

  public Agile estimationField(CustomField estimationField) {
    this.estimationField = estimationField;
    return this;
  }

   /**
   * Get estimationField
   * @return estimationField
  **/
  @Schema(description = "")
  public CustomField getEstimationField() {
    return estimationField;
  }

  public void setEstimationField(CustomField estimationField) {
    this.estimationField = estimationField;
  }

  public Agile originalEstimationField(CustomField originalEstimationField) {
    this.originalEstimationField = originalEstimationField;
    return this;
  }

   /**
   * Get originalEstimationField
   * @return originalEstimationField
  **/
  @Schema(description = "")
  public CustomField getOriginalEstimationField() {
    return originalEstimationField;
  }

  public void setOriginalEstimationField(CustomField originalEstimationField) {
    this.originalEstimationField = originalEstimationField;
  }

  public Agile projects(List<Project> projects) {
    this.projects = projects;
    return this;
  }

  public Agile addProjectsItem(Project projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<Project>();
    }
    this.projects.add(projectsItem);
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @Schema(description = "")
  public List<Project> getProjects() {
    return projects;
  }

  public void setProjects(List<Project> projects) {
    this.projects = projects;
  }

  public Agile sprints(List<Sprint> sprints) {
    this.sprints = sprints;
    return this;
  }

  public Agile addSprintsItem(Sprint sprintsItem) {
    if (this.sprints == null) {
      this.sprints = new ArrayList<Sprint>();
    }
    this.sprints.add(sprintsItem);
    return this;
  }

   /**
   * Get sprints
   * @return sprints
  **/
  @Schema(description = "")
  public List<Sprint> getSprints() {
    return sprints;
  }

  public void setSprints(List<Sprint> sprints) {
    this.sprints = sprints;
  }

  public Agile currentSprint(Sprint currentSprint) {
    this.currentSprint = currentSprint;
    return this;
  }

   /**
   * Get currentSprint
   * @return currentSprint
  **/
  @Schema(description = "")
  public Sprint getCurrentSprint() {
    return currentSprint;
  }

  public void setCurrentSprint(Sprint currentSprint) {
    this.currentSprint = currentSprint;
  }

  public Agile columnSettings(ColumnSettings columnSettings) {
    this.columnSettings = columnSettings;
    return this;
  }

   /**
   * Get columnSettings
   * @return columnSettings
  **/
  @Schema(description = "")
  public ColumnSettings getColumnSettings() {
    return columnSettings;
  }

  public void setColumnSettings(ColumnSettings columnSettings) {
    this.columnSettings = columnSettings;
  }

  public Agile swimlaneSettings(SwimlaneSettings swimlaneSettings) {
    this.swimlaneSettings = swimlaneSettings;
    return this;
  }

   /**
   * Get swimlaneSettings
   * @return swimlaneSettings
  **/
  @Schema(description = "")
  public SwimlaneSettings getSwimlaneSettings() {
    return swimlaneSettings;
  }

  public void setSwimlaneSettings(SwimlaneSettings swimlaneSettings) {
    this.swimlaneSettings = swimlaneSettings;
  }

  public Agile sprintsSettings(SprintsSettings sprintsSettings) {
    this.sprintsSettings = sprintsSettings;
    return this;
  }

   /**
   * Get sprintsSettings
   * @return sprintsSettings
  **/
  @Schema(description = "")
  public SprintsSettings getSprintsSettings() {
    return sprintsSettings;
  }

  public void setSprintsSettings(SprintsSettings sprintsSettings) {
    this.sprintsSettings = sprintsSettings;
  }

  public Agile colorCoding(ColorCoding colorCoding) {
    this.colorCoding = colorCoding;
    return this;
  }

   /**
   * Get colorCoding
   * @return colorCoding
  **/
  @Schema(description = "")
  public ColorCoding getColorCoding() {
    return colorCoding;
  }

  public void setColorCoding(ColorCoding colorCoding) {
    this.colorCoding = colorCoding;
  }

  public Agile status(AgileStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public AgileStatus getStatus() {
    return status;
  }

  public void setStatus(AgileStatus status) {
    this.status = status;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

   /**
   * Get $type
   * @return $type
  **/
  @Schema(description = "")
  public String get$Type() {
    return $type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Agile agile = (Agile) o;
    return Objects.equals(this.name, agile.name) &&
        Objects.equals(this.owner, agile.owner) &&
        Objects.equals(this.visibleFor, agile.visibleFor) &&
        Objects.equals(this.visibleForProjectBased, agile.visibleForProjectBased) &&
        Objects.equals(this.updateableBy, agile.updateableBy) &&
        Objects.equals(this.updateableByProjectBased, agile.updateableByProjectBased) &&
        Objects.equals(this.orphansAtTheTop, agile.orphansAtTheTop) &&
        Objects.equals(this.hideOrphansSwimlane, agile.hideOrphansSwimlane) &&
        Objects.equals(this.estimationField, agile.estimationField) &&
        Objects.equals(this.originalEstimationField, agile.originalEstimationField) &&
        Objects.equals(this.projects, agile.projects) &&
        Objects.equals(this.sprints, agile.sprints) &&
        Objects.equals(this.currentSprint, agile.currentSprint) &&
        Objects.equals(this.columnSettings, agile.columnSettings) &&
        Objects.equals(this.swimlaneSettings, agile.swimlaneSettings) &&
        Objects.equals(this.sprintsSettings, agile.sprintsSettings) &&
        Objects.equals(this.colorCoding, agile.colorCoding) &&
        Objects.equals(this.status, agile.status) &&
        Objects.equals(this.id, agile.id) &&
        Objects.equals(this.$type, agile.$type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, owner, visibleFor, visibleForProjectBased, updateableBy, updateableByProjectBased, orphansAtTheTop, hideOrphansSwimlane, estimationField, originalEstimationField, projects, sprints, currentSprint, columnSettings, swimlaneSettings, sprintsSettings, colorCoding, status, id, $type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Agile {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    visibleFor: ").append(toIndentedString(visibleFor)).append("\n");
    sb.append("    visibleForProjectBased: ").append(toIndentedString(visibleForProjectBased)).append("\n");
    sb.append("    updateableBy: ").append(toIndentedString(updateableBy)).append("\n");
    sb.append("    updateableByProjectBased: ").append(toIndentedString(updateableByProjectBased)).append("\n");
    sb.append("    orphansAtTheTop: ").append(toIndentedString(orphansAtTheTop)).append("\n");
    sb.append("    hideOrphansSwimlane: ").append(toIndentedString(hideOrphansSwimlane)).append("\n");
    sb.append("    estimationField: ").append(toIndentedString(estimationField)).append("\n");
    sb.append("    originalEstimationField: ").append(toIndentedString(originalEstimationField)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    sprints: ").append(toIndentedString(sprints)).append("\n");
    sb.append("    currentSprint: ").append(toIndentedString(currentSprint)).append("\n");
    sb.append("    columnSettings: ").append(toIndentedString(columnSettings)).append("\n");
    sb.append("    swimlaneSettings: ").append(toIndentedString(swimlaneSettings)).append("\n");
    sb.append("    sprintsSettings: ").append(toIndentedString(sprintsSettings)).append("\n");
    sb.append("    colorCoding: ").append(toIndentedString(colorCoding)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
